[tool.poetry]
name = "testjunputhon"
version = "0.1.0"
description = "Effective Mobile"
authors = ["Effective Mobile"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"


[tool.poetry.group.mypy.dependencies]
black = "^24.10.0"
flake8 = "^7.1.1"
isort = "^5.13.2"
pre-commit = "^4.0.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
coverage = "^7.6.7"
pytest-cov = "^6.0.0"
mypy = "^1.13.0"
pytest-mock = "^3.14.0"

[tool.pytest.ini_options]
pythonpath = [".", "../../src"]
testpaths = ["tests"]
markers = [
    "all: marks tests for test (deselect with '-m \"not all\"')",
    "book: marks tests for test (deselect with '-m \"not book\"')",
    "main: marks tests for test (deselect with '-m \"not main\"')",
    "unit: marks tests for test (deselect with '-m \"not unit\"')",
    "integration: marks tests for test (deselect with '-m \"not integration\"')",
]

addopts = "--strict-markers"

[tool.mypy]
python_version = 3.12
module_paths = ["src"]
ignore_missing_imports = true
mypy_path = ["src"]
packages = ["src"]
exclude = '''
   (?x)
   ^\.venv/ |
   ^test/ |
   ^tests/
'''

[tool.black]
line-length = 79
include = '\.py'
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.coverage.run]
branch = true
source = ["src"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "src.__main__:run"

